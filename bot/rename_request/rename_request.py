import discord
from discord.ext import commands
from discord.ui import Modal, InputText, View, button
from loguru import logger
from sqlalchemy.ext.asyncio import AsyncSession

from .embeds import (
    rename_embed, changed_rename_embed,
    denied_rename_embed, denied_send_embed
)
from core import async_session_factory, LEADER_ROLE, OFICER_ROLE, TREASURER_ROLE, LEADER_NICKNAME
from core.orm import rename_req_orm


class AccessDeniedView(View):
    """
    –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–∞–∑–∞ –≤ —Ä–µ–Ω–µ–π–º–µ.
    """
    def __init__(self, timeout: float | None = None):
        super().__init__(timeout=timeout)

    
    async def get_member_params(self, session: AsyncSession, interaction: discord.Interaction):
        old_nickname = interaction.message.embeds[0].author.name
        rename_req_obj = await rename_req_orm.get_rename_request_obj(session, old_nickname)
        if not rename_req_orm:
            return await interaction.respond('–û—à–∏–±–∫–∞ –≤ –ë–î, –Ω–µ –Ω–∞—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! ‚ùå')
        guild = interaction.guild
        member = await guild.fetch_member(rename_req_obj.user_id)

        return old_nickname, rename_req_obj, member

    
    @button(label='–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º', custom_id='–°–º–µ–Ω–∏—Ç—å–ù–∏–∫–Ω–µ–π–º', style=discord.ButtonStyle.green)
    async def callback_accept(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        try:
            async with async_session_factory() as session:
                await interaction.response.defer(invisible=False, ephemeral=True)
                old_nickname, rename_req_obj, member = await self.get_member_params(
                    session=session,
                    interaction=interaction
                )
                await member.edit(nick=rename_req_obj.new_nickname)
                self.disable_all_items()
                self.clear_items()
                await interaction.message.edit(
                    embed=changed_rename_embed(
                        old_nickname=old_nickname,
                        jump_url=member.jump_url,
                        new_nickname=rename_req_obj.new_nickname
                    ),
                    view=self
                )
                await rename_req_orm.delete_rename_request_data(session, old_nickname)
                await session.commit()
                await interaction.respond('‚úÖ', delete_after=1)
                logger.info(
                    f'–ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {old_nickname} –∏–∑–º–µ–Ω—ë–Ω '
                    f'–Ω–∞ {rename_req_obj.new_nickname}'
                )
        except Exception as error:
            await interaction.respond('‚ùå', delete_after=3)
            logger.error(
                f'–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {error}'
            )

    @button(
        label='–û—Ç–∫–∞–∑–∞—Ç—å –≤ —Ä–µ–Ω–µ–π–º–µ, –µ—Å–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏–≥—Ä–æ–≤—ã–º',
        custom_id='–û—Ç–∫–∞–∑–∞—Ç—å–í—Ä–µ–Ω–µ–π–º–µ',
        style=discord.ButtonStyle.red
    )
    async def callback_denied(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        try:
            async with async_session_factory() as session:
                await interaction.response.defer(invisible=False, ephemeral=True)
                old_nickname, rename_req_obj, member = await self.get_member_params(
                    session=session,
                    interaction=interaction
                )
                try:
                    await member.send(
                        embed=denied_send_embed()
                    )
                except discord.Forbidden:
                    logger.warning(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "{old_nickname}" –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è')
                self.disable_all_items()
                self.clear_items()
                await interaction.message.edit(
                    embed=denied_rename_embed(old_nickname=old_nickname, jump_url=member.jump_url),
                    view=self
                )
                await rename_req_orm.delete_rename_request_data(session, old_nickname)
                await session.commit()
                await interaction.respond('‚úÖ', delete_after=1)
                logger.info(f'–ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {old_nickname} –ù–ï –∏–∑–º–µ–Ω—ë–Ω')
        except Exception as error:
            await interaction.respond('‚ùå', delete_after=3)
            logger.error(
                f'–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–∫–∞–∑–∞ –≤ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {error}'
            )


class RenameModal(Modal):
    """
    –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞.
    """
    def __init__(
        self,
        channel: discord.TextChannel
    ):
        super().__init__(title='–†–µ–Ω–µ–π–º–µ—Ä', timeout=None)
        self.channel = channel

        self.add_item(
            InputText(
                style=discord.InputTextStyle.short,
                label='–í–ø–∏—à–∏ –Ω–æ–≤—ã–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º',
                placeholder='–î–ª–∏–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞ –∫–∞–∫ –≤ –∏–≥—Ä–µ 3-14 —Å–∏–º–≤–æ–ª–æ–≤',
                min_length=3,
                max_length=14
            )
        )

    async def callback(self, interaction: discord.Interaction):
        new_nickname: str = self.children[0].value
        user: discord.Member = interaction.user
        try:
            async with async_session_factory() as session:
                await interaction.response.defer(invisible=False, ephemeral=True)
                rename_req_obj = await rename_req_orm.get_rename_request_obj(session, user.display_name)
                if interaction.user.display_name == new_nickname:
                    return await interaction.respond(
                        '_–ó–∞—á–µ–º –º–µ–Ω—è—Ç—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π? ü§î_',
                        delete_after=3
                    )
                if rename_req_obj:
                    await interaction.respond(
                        '_–¢—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–º–µ–Ω—É –Ω–∏–∫–∞, –æ–∂–∏–¥–∞–π! üëå_',
                        delete_after=3
                    )
                else:
                    await self.channel.send(
                        embed=rename_embed(
                            old_nickname=user.display_name,
                            jump_url=user.jump_url,
                            new_nickname=new_nickname
                        ),
                        view=AccessDeniedView()
                    )
                    await rename_req_orm.insert_rename_request_data(
                        session=session,
                        old_nickname=user.display_name,
                        new_nickname=new_nickname,
                        user_id=user.id
                    )
                    await session.commit()
                    await interaction.respond(
                        '_–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –ø–æ–≥–æ–¥–∏ —á—É—Ç–∫–∞! ‚úÖ_',
                        delete_after=3
                    )
                    logger.info(
                        f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–º–µ–Ω—É –Ω–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.display_name}'
                    )
        except Exception as error:
            await interaction.respond(
                '_–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å ‚ùå\n\n'
                f'–ö–æ–¥ –æ—à–∏–±–∫–∏: **{error}**\n\n'
                f'–ó–∞—Å–∫—Ä–∏–Ω—å, –æ—Ç–ø—Ä–∞–≤—å {LEADER_NICKNAME}, –æ–Ω —Ä–∞–∑–±–µ—Ä—ë—Ç—Å—è!üëå_'
            )
            logger.error(
                f'–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–º–µ–Ω—É –Ω–∏–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {error}'
            )


class RenameButton(View):
    """
    –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞.
    """
    def __init__(
        self,
        channel: discord.TextChannel,
        timeout: float | None = None
    ):
        super().__init__(timeout=timeout)
        self.channel = channel

    @button(
        label='–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–º–µ–Ω—É –Ω–∏–∫–∞', style=discord.ButtonStyle.green,
        emoji='üëã', custom_id='–†–µ–Ω–µ–π–º–µ—Ä'
    )
    async def callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        try:
            await interaction.response.send_modal(
                RenameModal(channel=self.channel)
            )
        except Exception as error:
            logger.error(f'–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É RenameButton –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {error}')


@commands.slash_command()
@commands.has_any_role(LEADER_ROLE, OFICER_ROLE, TREASURER_ROLE)
async def rename(
    ctx: discord.ApplicationContext,
    channel: discord.Option(
        discord.TextChannel,
        description='–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É?',
        name_localizations={'ru':'—Ç–µ–∫—Å—Ç–æ–≤—ã–π_–∫–∞–Ω–∞–ª'}
    ),  # type: ignore
    message_id: discord.Option(
        str,
        description='ID —Å–æ–æ–±—â–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –∫–Ω–æ–ø–∫–∞',
        name_localizations={'ru':'id_—Å–æ–æ–±—â–µ–Ω–∏—è'},
        required=False
    )  # type: ignore
) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞.
    """
    if message_id:
        message = ctx.channel.get_partial_message(int(message_id))
        await message.edit(view=RenameButton(channel=channel))
        await ctx.respond(
            '_–ö–Ω–æ–ø–∫–∞ —Ä–µ–Ω–µ–π–º–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ —Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!_',
            ephemeral=True,
            delete_after=3
        )
    else:
        await ctx.respond(view=RenameButton(channel=channel))
        await ctx.respond(
            '_–ö–Ω–æ–ø–∫–∞ —Ä–µ–Ω–µ–π–º–µ—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!_',
            ephemeral=True,
            delete_after=3
        )
    logger.info(
        f'–ö–æ–º–∞–Ω–¥–∞ "/rename" –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
        f'"{ctx.user.display_name}" –≤ –∫–∞–Ω–∞–ª "{channel}"!'
    )


@rename.error
async def role_application_error(
    ctx: discord.ApplicationContext,
    error: Exception
) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ
    –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Ä–µ–Ω–µ–π–º.
    """
    if isinstance(error, commands.errors.MissingAnyRole):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ "–õ–∏–¥–µ—Ä, –ö–∏–∑–Ω–∞—á–µ–π –∏–ª–∏ –û—Ñ–∏—Ü–µ—Ä"!',
            ephemeral=True,
            delete_after=10
        )
    elif isinstance(error, commands.errors.PrivateMessageOnly):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞!',
            ephemeral=True,
            delete_after=10
        )
    else:
        raise error


def setup(bot: discord.Bot):
    bot.add_application_command(rename)
