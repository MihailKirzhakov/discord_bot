import discord
from discord.ext import commands
from discord.ui import Modal, InputText, View, button, select
from loguru import logger

from variables import (
    LEADER_ROLE, TREASURER_ROLE, OFICER_ROLE,
    VETERAN_ROLE, SERGEANT_ROLE, LEADER_ID
)
from .embeds import set_group_embed, set_group_discription_embed


class EditGroupButton(View):
    def __init__(
        self,
    ):
        super().__init__(timeout=None)

    @button(
        label='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—É', style=discord.ButtonStyle.blurple,
        emoji='üîÅ', custom_id='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–ì—Ä—É–ø–ø—ã'
    )
    async def callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        try:
            guild_leader = discord.utils.get(interaction.guild.members, id=int(LEADER_ID))
            interaction_message_embed: discord.Embed = interaction.message.embeds[0]

            if (
                interaction.user.mention in interaction_message_embed.description
                or interaction.user == guild_leader
            ):
                return await interaction.response.send_modal(SetGroupModal(if_edit=True))

            await interaction.respond(
                '_–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—É –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –ö–ü–õ ‚ùå_',
                ephemeral=True,
                delete_after=2
            )
        except Exception as error:
            logger.error(
                f'–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–≤–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É '
                f'"{button.label}" –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ "{error}"'
            )


class LeaderSetGroup(View):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ö–ü–ª–∞"""
    def __init__(self):
        super().__init__(timeout=None)

    @select(
        select_type=discord.ComponentType.user_select,
        min_values=1,
        max_values=6,
        placeholder='–í—ã–±–µ—Ä–∏ –ö–ü–ª–∞'
    )
    async def callback(
        self, select: discord.ui.Select, interaction: discord.Interaction
    ):
        try:
            await interaction.response.defer(invisible=False, ephemeral=True)
            group_leader: discord.User = select.values[0]
            embed: discord.Embed = set_group_embed()
            embed.description += f'1. {group_leader.mention}'

            for i, child in enumerate(select.values, start=2):
                user_nick: child.value
                user_mention: str = user_nick.mention if user_nick else '–í–∞–∫–∞–Ω—Å–∏—è'
                embed.fields[0].value += f'{i}. {user_mention}\n'

            await interaction.channel.send(
                    view=EditGroupButton(),
                    embed=embed
                )

            await interaction.respond('‚úÖ', delete_after=1)
            logger.info(
                f'–ì—Ä—É–ø–ø–∞ —Å–æ–∑–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}'
            )
        except Exception as error:
            logger.error(
                f'–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name} '
                f'–≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {error}'
            )


class SetGroupModal(Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤"""
    def __init__(self, if_edit: bool = False):
        super().__init__(
            title='–í–ø–∏—à–∏ –Ω–∏–∫–Ω–µ–π–º—ã —Å–≤–æ–∏—Ö —Å–æ–ö–ü, —Å–µ–±—è –ù–ï –Ω–∞–¥–æ!',
            timeout=None
        )
        self.if_edit = if_edit

        for i in range(5):
            self.add_item(
                    InputText(
                        style=discord.InputTextStyle.short,
                        label=f'{i + 2} –∏–≥—Ä–æ–∫',
                        placeholder='–î–ª–∏–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞ –∫–∞–∫ –≤ –∏–≥—Ä–µ 3-14 —Å–∏–º–≤–æ–ª–æ–≤',
                        min_length=3,
                        max_length=14,
                        required=False
                    )
                )

    async def callback(self, interaction: discord.Interaction):
        try:
            await interaction.response.defer(invisible=False, ephemeral=True)
            group_leader: discord.User = interaction.user
            embed: discord.Embed = set_group_embed()
            embed.description += f'1. {group_leader.mention}'

            if self.if_edit:
                embed: discord.Embed = interaction.message.embeds[0]
                embed.fields[0].value = ''

            for i, child in enumerate(self.children, start=2):
                user_nick: discord.User = discord.utils.get(interaction.guild.members, display_name=child.value)
                user_mention: str = user_nick.mention if user_nick else '–í–∞–∫–∞–Ω—Å–∏—è'
                embed.fields[0].value += f'{i}. {user_mention}\n'

            if self.if_edit:
                await interaction.message.edit(embed=embed)
            else:
                await interaction.channel.send(
                    view=EditGroupButton(),
                    embed=embed
                )

            await interaction.respond('‚úÖ', delete_after=1)
            logger.info(
                f'–ì—Ä—É–ø–ø–∞ —Å–æ–∑–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}'
            )
        except Exception as error:
            logger.error(
                f'–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name} '
                f'–≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {error}'
            )


class SetGroupButton(View):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    def __init__(self):
        super().__init__(timeout=None)

    @button(
        label='–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É', style=discord.ButtonStyle.green,
        emoji='üìã', custom_id='–°–æ–∑–¥–∞–Ω–∏–µ–ì—Ä—É–ø–ø—ã'
    )
    async def callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        try:
            if interaction.user.id == int(LEADER_ID):
                await interaction.respond(
                    view=LeaderSetGroup(), ephemeral=True
                )
            await interaction.response.send_modal(SetGroupModal())
        except Exception as error:
            logger.error(
                f'–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–≤–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É '
                f'"{button.label}" –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ "{error}"'
            )


@commands.slash_command()
@commands.has_any_role(
    LEADER_ROLE, TREASURER_ROLE, OFICER_ROLE,
    VETERAN_ROLE, SERGEANT_ROLE
)
async def set_group(ctx: discord.ApplicationContext) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –≥—Ä—É–ø–ø—É.
    """
    try:
        await ctx.respond(
            embed=set_group_discription_embed(),
            view=SetGroupButton()
        )
        await ctx.respond(
            '_–ö–Ω–æ–ø–∫–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –∑–∞–ø—É—â–µ–Ω–∞!_',
            ephemeral=True,
            delete_after=2
        )
        logger.info(
            f'–ö–æ–º–∞–Ω–¥–∞ "/set_group" –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º '
            f'"{ctx.user.display_name}"!'
        )
    except Exception as error:
        logger.error(
            f'–ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /set_group'
            f'–≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ "{error}". –ö–æ–º–∞–Ω–¥—É –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '
            f'"{ctx.user.display_name}".'
        )


@set_group.error
async def role_application_error(
    ctx: discord.ApplicationContext,
    error: Exception
) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ
    –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—ã–¥–∞—á—É –¥–æ—Å—Ç—É–ø–∞.
    """
    if isinstance(error, commands.errors.MissingAnyRole):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ "–°–æ–≥–∏–ª—å–¥–µ–µ—Ü"!',
            ephemeral=True,
            delete_after=10
        )
    elif isinstance(error, commands.errors.PrivateMessageOnly):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞!',
            ephemeral=True,
            delete_after=10
        )
    else:
        raise error


def setup(bot: discord.Bot):
    bot.add_application_command(set_group)
