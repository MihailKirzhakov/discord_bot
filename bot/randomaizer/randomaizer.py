import discord
from discord.ext import commands
from discord.ui import Modal, InputText, View, button
from loguru import logger

from .embeds import number_range, nickname_range
from .functions import rand_choice
from core import (
    DEAFAULT_RANDOMISE_VALUE, WRONG_PARMS,
    LEADER_ROLE, OFICER_ROLE, TREASURER_ROLE
)


class RandomModal(Modal):
    """
    –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è,
    –¥–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º—ã —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å.

    Returns:
    --------
        None
    """
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs, title='–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä', timeout=None)

        self.add_item(
            InputText(
                style=discord.InputTextStyle.multiline,
                label='–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞',
                placeholder='–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ(–µ—Å–ª–∏ –ø—É—Å—Ç–æ —Ç–æ, —Ä–∞–Ω–¥–æ–º —á–∏—Å–ª–æ 1-100)',
                max_length=1000,
                required=False
            )
        )

    async def callback(self, interaction: discord.Interaction):
        if len(self.children[0].value) == 0:
            if not rand_choice(DEAFAULT_RANDOMISE_VALUE):
                return await interaction.respond(
                    WRONG_PARMS,
                    ephemeral=True,
                    delete_after=15
                )
            return await interaction.respond(
                embed=number_range(
                    rand_choice(DEAFAULT_RANDOMISE_VALUE),
                    DEAFAULT_RANDOMISE_VALUE
                ),
                delete_after=30
            )
        else:
            if not rand_choice(self.children[0].value):
                return await interaction.respond(
                    WRONG_PARMS,
                    ephemeral=True,
                    delete_after=15
                )
            if not isinstance(rand_choice(self.children[0].value), int):
                return await interaction.respond(
                    embed=nickname_range(rand_choice(self.children[0].value)),
                    delete_after=30
                )
            return await interaction.respond(
                embed=number_range(
                    rand_choice(self.children[0].value),
                    self.children[0].value
                ),
                delete_after=30
            )


class RandomButton(View):
    """
    –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞.

    Returns:
    --------
        None
    """
    def __init__(
        self,
        timeout: float | None = None
    ):
        super().__init__(timeout=timeout)

    @button(
        label='–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä', style=discord.ButtonStyle.green,
        emoji='üé≤', custom_id='–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä'
    )
    async def callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        await interaction.response.send_modal(RandomModal())


@commands.slash_command()
@commands.has_any_role(LEADER_ROLE, OFICER_ROLE, TREASURER_ROLE)
async def random(
    ctx: discord.ApplicationContext,
    channel: discord.Option(
        discord.TextChannel,
        description='–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É?',
        name_localizations={'ru':'—Ç–µ–∫—Å—Ç–æ–≤—ã–π_–∫–∞–Ω–∞–ª'}
    ), # type: ignore
    message_id: discord.Option(
        str,
        description='ID —Å–æ–æ–±—â–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –∫–Ω–æ–ø–∫–∞',
        name_localizations={'ru':'id_—Å–æ–æ–±—â–µ–Ω–∏—è'},
        required=False
    )  # type: ignore
) -> None:
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞.
    """
    try:
        if message_id:
            message = ctx.channel.get_partial_message(int(message_id))
            await message.edit(view=RandomButton())
            await ctx.respond(
                f'_–ö–Ω–æ–ø–∫–∞ —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ —Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ '
                f'–∫–∞–Ω–∞–ª–µ {channel.mention}!_',
                ephemeral=True,
                delete_after=3
            )
        else:
            await channel.send(view=RandomButton())
            await ctx.respond(
                f'_–ö–Ω–æ–ø–∫–∞ —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª '
                f'{channel.mention}!_',
                ephemeral=True,
                delete_after=3
            )
        logger.info(
            f'–ö–æ–º–∞–Ω–¥–∞ "/random" –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
            f'"{ctx.user.display_name}" –≤ –∫–∞–Ω–∞–ª "{channel}"!'
        )
    except Exception as error:
        logger.error(
            f'–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–∞–Ω–¥—ã /random –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ '
            f'"{error}"!'
        )


@random.error
async def random_error(
    ctx: discord.ApplicationContext,
    error: Exception
) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ
    –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—ã–¥–∞—á—É –¥–æ—Å—Ç—É–ø–∞.
    """
    if isinstance(error, commands.errors.MissingAnyRole):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ "–°–æ–≥–∏–ª—å–¥–µ–µ—Ü"!',
            ephemeral=True,
            delete_after=10
        )
    elif isinstance(error, commands.errors.PrivateMessageOnly):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞!',
            ephemeral=True,
            delete_after=10
        )
    else:
        raise error


def setup(bot: discord.Bot):
    bot.add_application_command(random)
