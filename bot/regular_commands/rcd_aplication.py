import discord
from discord.ui import Modal, InputText, View, button, select
from loguru import logger

from .embeds import (
    start_rcd_embed, rcd_list_embed, ask_veteran_embed,
    final_rcd_list_embed
)
from variables import VETERAN_ROLE


member_list: list = []
channel_last_message: list[discord.Message] = []
rcd_channel: list[discord.TextChannel] = []
embed: discord.Embed = final_rcd_list_embed()
last_message_rcd_list: list[discord.Message] = []


class RaidChampionDominionApplication(Modal):
    """
    –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞—è–≤–∫—É –†–ß–î.

    Attributes:
    ----------
        embed: discord.Embed
            –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    def __init__(
            self,
            embed: discord.Embed
    ):
        super().__init__(title='–ó–∞—è–≤–∫–∞ –Ω–∞ –†–ß–î', timeout=None)
        self.embed = embed

        self.add_item(
            InputText(
                style=discord.InputTextStyle.multiline,
                label='–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Å—Ç–∏',
                placeholder='0-500',
                max_length=3
            )
        )

        self.add_item(
            InputText(
                style=discord.InputTextStyle.short,
                label='–£–∫–∞–∂–∏ –∫–ª–∞—Å—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—á–µ—à—å –∏–¥—Ç–∏ –Ω–∞ –†–ß–î',
                placeholder='–ï—Å–ª–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω—è—Ç—å, –∑–Ω–∞—á–∏—Ç –ª—é–±–æ–π –∫–ª–∞—Å—Å',
                required=False
            )
        )

    async def callback(self, interaction: discord.Interaction):
        try:
            if interaction.user.display_name in member_list:
                return await interaction.respond(
                    '_–¢—ã —É–∂–µ –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É! ‚úÖ_',
                    ephemeral=True,
                    delete_after=5
                )
            honor: str = str(self.children[0].value)
            class_role: str = str(self.children[1].value)
            if not class_role:
                class_role = '–õ—é–±–æ–π –∫–ª–∞—Å—Å'
            field_index = 0 if discord.utils.get(interaction.user.roles, name=VETERAN_ROLE) else 1
            self.embed.fields[field_index].value += (
                f'{interaction.user.mention}: {class_role} ({honor})\n'
            )
            await channel_last_message[0].edit(embed=self.embed)
            member_list.append(f'{interaction.user.display_name}')
            await interaction.respond(
                '_–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ ‚úÖ_',
                ephemeral=True,
                delete_after=5
            )
            logger.info(
                f'–ü—Ä–∏–Ω—è—Ç–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –†–ß–î –æ—Ç {interaction.user.display_name}')
        except Exception as error:
            logger.error(
                f'–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –†–ß–î –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º '
                f'{interaction.user.display_name} –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞{error}'
            )


class RCDButton(View):
    """
    –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –∑–∞—è–≤–∫–∏ –†–ß–î.

    Attributes:
    ----------
        embed: discord.Embed
            –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    def __init__(
            self,
            embed: discord.Embed,
            timeout: float | None = None
    ):
        super().__init__(timeout=timeout)
        self.embed = embed

    @button(
            label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –†–ß–î', style=discord.ButtonStyle.green,
            emoji='üìã', custom_id='–ó–∞—è–≤–∫–∞–†–ß–î'
    )
    async def callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        try:
            await interaction.response.send_modal(
                RaidChampionDominionApplication(
                    embed=self.embed
                ))
        except Exception as error:
            logger.error(
                f'–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –†–ß–î '
                f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name} '
                f'–≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {error}'
            )


class SelectMemberToRCD(View):
    """
    –ú–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –†–ß–î —Å–ø–∏—Å–æ–∫.

    Attributes:
    ----------
        index: int
            –ò–Ω–¥–µ–∫—Å –ø–æ–ª—è –≤—Ç—Å—Ç—Ä–∞–∏–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è Embed.

        embed: discord.Embed
            –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    def __init__(self, index: int) -> None:
        super().__init__(timeout=None)
        self.index = index

    @select(
        select_type=discord.ComponentType.user_select,
        min_values=1,
        max_values=4,
        placeholder='–í—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–æ–≤...'
    )
    async def select_callback(
        self,
        select: discord.ui.Select,
        interaction: discord.Interaction
    ):
        await self.update_embed(
            interaction,', '.join(user.mention for user in select.values)
        )

    @button(label='–ü—É—Å—Ç–æ', style=discord.ButtonStyle.gray, custom_id='–ü—É—Å—Ç–æ')
    async def button_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        await self.update_embed(interaction, '–ü—É—Å—Ç–æ')

    async def update_embed(
        self,
        interaction: discord.Interaction,
        value: str
    ) -> None:
        embed.fields[self.index].value = value
        await last_message_rcd_list[0].edit(embed=embed)
        await interaction.message.delete()
        await interaction.respond(
            f'–î–æ–±–∞–≤–ª–µ–Ω–æ {"‚úÖ" if value else "‚≠ï"}',
            ephemeral=True,
            delete_after=1
        )


class CreateRCDList(View):
    """
    –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –†–ß–î —Å–ø–∏—Å–∫–∞, –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ—Ç–æ–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞.

    Attributes:
    ----------
        channel: discord.TextChannel
            –ö–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–∏—Å–æ–∫ –†–ß–î.
    """

    index_class_role = {
        0: '–í–æ–∏–Ω—ã:',
        1: '–ü–∞–ª–∞–¥–∏–Ω—ã:',
        2: '–ò–Ω–∂–µ–Ω–µ—Ä—ã:',
        3: '–ñ—Ä–µ—Ü—ã:',
        4: '–®–∞–º–∞–Ω—ã:',
        5: '–ú–∏—Å—Ç–∏–∫–∏:',
        6: '–õ—É—á–Ω–∏–∫–∏:',
        7: '–ú–∞–≥–∏:',
        8: '–ù–µ–∫—Ä–æ–º–∞–Ω—Ç—ã:',
        9: '–ë–∞—Ä–¥—ã',
        10: '–î–µ–º–æ–Ω—ã'
    }

    def __init__(
        self,
        timeout: float | None = None
    ):
        super().__init__(timeout=timeout)

    @button(
        label='–°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫', style=discord.ButtonStyle.blurple,
        custom_id='–°–æ–∑–¥–∞—Ç—å–°–ø–∏—Å–æ–∫'
    )
    async def create_list_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        obj_1: discord.ui.Button = self.children[0]
        obj_2: discord.ui.Button = self.children[1]
        obj_13: discord.ui.Select = self.children[12]

        obj_1.label = '‚¨áÔ∏è –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω –Ω–∏–∂–µ ‚¨áÔ∏è'
        obj_1.style = discord.ButtonStyle.gray
        obj_1.disabled = True

        obj_2.style = discord.ButtonStyle.green
        obj_2.disabled = False

        obj_13.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(embed=embed)

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–í–æ–∏–Ω–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–í–æ–∏–Ω–æ–≤', disabled=True
    )
    async def add_warior_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        last_message_rcd_list.append(interaction.channel.last_message)
        await self.update_view_rcd_list(interaction, '–í–æ–∏–Ω—ã:', 0)

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–ü–∞–ª–∞–¥–∏–Ω–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–ü–∞–ª–∞–¥–∏–Ω–æ–≤', disabled=True
    )
    async def add_paladin_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 2:
            embed.add_field(
                name='–ü–∞–ª–∞–¥–∏–Ω:',
                value='',
                inline=False
            )
        obj_4: discord.ui.Button = self.children[3]
        obj_4.style = discord.ButtonStyle.green
        obj_4.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=1))

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–ò–Ω–∂–µ–Ω–µ—Ä–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–ò–Ω–∂–µ–Ω–µ—Ä–æ–≤', disabled=True
    )
    async def add_ingeneer_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 3:
            embed.add_field(
                name='–ò–Ω–∂–µ–Ω–µ—Ä—ã:',
                value='',
                inline=False
            )
        obj_5: discord.ui.Button = self.children[4]
        obj_5.style = discord.ButtonStyle.green
        obj_5.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=2))

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–ñ—Ä–µ—Ü–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–ñ—Ä–µ—Ü–æ–≤', disabled=True
    )
    async def add_priest_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 4:
            embed.add_field(
                name='–ñ—Ä–µ—Ü—ã:',
                value='',
                inline=False
            )
        obj_6: discord.ui.Button = self.children[5]
        obj_6.style = discord.ButtonStyle.green
        obj_6.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=3))

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–î—Ä—É–∏–¥–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–î—Ä—É–∏–¥–æ–≤', disabled=True
    )
    async def add_druid_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 5:
            embed.add_field(
                name='–®–∞–º–∞–Ω:',
                value='',
                inline=False
            )
        obj_7: discord.ui.Button = self.children[6]
        obj_7.style = discord.ButtonStyle.green
        obj_7.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=4))

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–ú–∏—Å—Ç–∏–∫–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–ú–∏—Å—Ç–∏–∫–æ–≤', disabled=True
    )
    async def add_mistic_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 6:
            embed.add_field(
                name='–ú–∏—Å—Ç–∏–∫–∏:',
                value='',
                inline=False
            )
        obj_8: discord.ui.Button = self.children[7]
        obj_8.style = discord.ButtonStyle.green
        obj_8.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=5))

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–õ—É—á–Ω–∏–∫–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–õ—É—á–Ω–∏–∫–æ–≤', disabled=True
    )
    async def add_stalker_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 7:
            embed.add_field(
                name='–õ—É—á–Ω–∏–∫–∏:',
                value='',
                inline=False
            )
        obj_9: discord.ui.Button = self.children[8]
        obj_9.style = discord.ButtonStyle.green
        obj_9.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=6))

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–ú–∞–≥–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–ú–∞–≥–æ–≤', disabled=True
    )
    async def add_mage_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 8:
            embed.add_field(
                name='–ú–∞–≥–∏:',
                value='',
                inline=False
            )
        obj_10: discord.ui.Button = self.children[9]
        obj_10.style = discord.ButtonStyle.green
        obj_10.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=7))

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–æ–≤', disabled=True
    )
    async def add_necromant_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 9:
            embed.add_field(
                name='–ù–µ–∫—Ä–æ–º–∞–Ω—Ç—ã:',
                value='',
                inline=False
            )
        obj_11: discord.ui.Button = self.children[10]
        obj_11.style = discord.ButtonStyle.green
        obj_11.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=8))

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–ë–∞—Ä–¥–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–ë–∞—Ä–¥–æ–≤', disabled=True
    )
    async def add_bard_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        await self.update_view_rcd_list(interaction, '–ë–∞—Ä–¥—ã:', 9)

    @button(
        label='–î–æ–±–∞–≤–∏—Ç—å "–î–µ–º–æ–Ω–æ–ª–æ–≥–æ–≤"', style=discord.ButtonStyle.gray,
        custom_id='–î–æ–±–∞–≤–∏—Ç—å–î–µ–º–æ–Ω–æ–ª–æ–≥–æ–≤', disabled=True
    )
    async def add_deamon_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        if len(embed.fields) < 11:
            embed.add_field(
                name='–î–µ–º–æ–Ω—ã:',
                value='',
                inline=False
            )
        await interaction.respond(view=SelectMemberToRCD(index=10))

    @select(
        select_type=discord.ComponentType.channel_select,
        min_values=1,
        max_values=1,
        placeholder='–í—ã–±–µ—Ä–∏ –∫–∞–Ω–∞–ª, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –†–ß–î',
        channel_types=[discord.ChannelType.text], disabled=True
    )
    async def select_callback(
        self, select: discord.ui.Select, interaction: discord.Interaction
    ):
        channel: discord.TextChannel = select.values[0]
        await channel.last_message.delete()
        await channel.send(embed=embed)
        await interaction.respond(
            f'_–°–ø–∏—Å–æ–∫ –†–ß–î –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ {channel.mention}_',
            ephemeral=True,
            delete_after=5
        )

    async def update_view_rcd_list(
            self,
            interaction: discord.Interaction,
            index: int,
    ) -> None:
        if len(embed.fields) < index + 1:
            embed.add_field(
                name=self.index_class_role.get(index),
                value='',
                inline=False
            )
        button: discord.ui.Button = self.children[index + 2]
        button.style = discord.ButtonStyle.green
        button.disabled = False
        await interaction.message.edit(view=self)
        await interaction.respond(view=SelectMemberToRCD(index=index))


class StartRCDButton(View):
    """
    –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –†–ß–î –∑–∞—è–≤–æ–∫.

    Attributes:
    ----------
        channel: discord.TextChannel
            –ö–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–∏—Å–æ–∫ –†–ß–î.
    """
    def __init__(
        self,
        timeout: float | None = None
    ):
        super().__init__(timeout=timeout)

    @select(
        select_type=discord.ComponentType.channel_select,
        min_values=1,
        max_values=1,
        placeholder='–í—ã–±–µ—Ä–∏ –∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞—è–≤–æ–∫ –†–ß–î',
        channel_types=[discord.ChannelType.text]
    )
    async def select_callback(
        self, select: discord.ui.Select, interaction: discord.Interaction
    ):
        channel: discord.TextChannel = select.values[0]
        try:
            await channel.send(
                embed=start_rcd_embed(),
                view=RCDButton(
                    embed=rcd_list_embed()
                )
            )
            channel_last_message.append(interaction.channel.last_message)
            await interaction.respond(view=CreateRCDList())
            rcd_channel.append(channel)
            self.children[0].disabled = True
            self.children[1].disabled = False
            self.remove_item(self.children[0])
            await interaction.message.edit(view=self)
            await interaction.respond(
                f'_–ó–∞—è–≤–∫–∏ –∑–∞–ø—É—â–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ {channel.mention} üëå_',
                ephemeral=True,
                delete_after=3
            )
            logger.info(
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.display_name} –∑–∞–ø—É—Å—Ç–∏–ª '
                f'–∑–∞—è–≤–∫–∏ –Ω–∞ –†–ß–î'
            )
        except Exception as error:
            logger.error(f'–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É StartRCDButton –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ {error}')

    @button(
        label='–°–ø—Ä–æ—Å–∏—Ç—å –≤—Å–µ—Ö "–í–µ—Ç–µ—Ä–∞–Ω–æ–≤"', style=discord.ButtonStyle.blurple,
        emoji='‚ùì', custom_id='–°–ø—Ä–æ—Å–∏—Ç—å–í–µ—Ç–µ—Ä–∞–Ω–æ–≤', disabled=True
    )
    async def ask_callback(
        self,
        button: discord.ui.Button,
        interaction: discord.Interaction
    ):
        url = rcd_channel[0].jump_url
        role = discord.utils.get(interaction.guild.roles, name=VETERAN_ROLE)
        veteran_members = [member for member in interaction.guild.members if role in member.roles]
        for veteran_member in veteran_members:
            await veteran_member.send(
                embed=ask_veteran_embed(
                    member=interaction.user, url=url
                ),
                delete_after=10800
            )
        await interaction.message.delete()
        await interaction.respond(
            '–°–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤—Å–µ–º –≤–µ—Ç–µ—Ä–∞–Ω–∞–º',
            ephemeral=True,
            delete_after=3
        )
