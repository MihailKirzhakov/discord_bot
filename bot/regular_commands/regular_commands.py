import discord

from discord.ext import commands

from .randomaizer import ApplicationButton
from .embeds import technical_works_embed, attention_embed


@commands.slash_command()
@commands.has_any_role('üåÄ–õ–∏–¥–µ—Ä –≥–∏–ª—å–¥–∏–∏üåÄ', 'üì£–ö–∞–∑–Ω–∞—á–µ–πüì£', 'üõ°Ô∏è–û—Ñ–∏—Ü–µ—Äüõ°Ô∏è')
async def technical_works(
    ctx: discord.ApplicationContext,
    channel: discord.Option(
        discord.TextChannel,
        description='–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ?',
        name_localizations={'ru':'—Ç–µ–∫—Å—Ç–æ–≤—ã–π_–∫–∞–Ω–∞–ª'},
    )  # type: ignore
):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–µ—Ö. —Ä–∞–±–æ—Ç–∞—Ö"""
    await channel.send(embed=technical_works_embed())
    await ctx.respond(
        f'_–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–µ—Ö —Ä–∞–±–æ—Ç–∞—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {channel.mention}!_',
        ephemeral=True,
        delete_after=5
    )


@technical_works.error
async def technical_works_error(
    ctx: discord.ApplicationContext,
    error: Exception
):
    if isinstance(error, commands.errors.MissingAnyRole):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ "–õ–∏–¥–µ—Ä", "–ö–∞–∑–Ω–∞—á–µ–π" –∏–ª–∏ "–û—Ñ–∏—Ü–µ—Ä"!',
            ephemeral=True,
            delete_after=15
        )
    elif isinstance(error, commands.errors.PrivateMessageOnly):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞!',
            ephemeral=True,
            delete_after=15
        )
    else:
        raise error


@commands.slash_command()
@commands.has_any_role('üåÄ–õ–∏–¥–µ—Ä –≥–∏–ª—å–¥–∏–∏üåÄ', 'üì£–ö–∞–∑–Ω–∞—á–µ–πüì£', 'üõ°Ô∏è–û—Ñ–∏—Ü–µ—Äüõ°Ô∏è')
async def attention(
    ctx: discord.ApplicationContext,
    channel: discord.Option(
        discord.TextChannel,
        description='–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ?',
        name_localizations={'ru':'—Ç–µ–∫—Å—Ç–æ–≤—ã–π_–∫–∞–Ω–∞–ª'},
    ),  # type: ignore
    value: discord.Option(
        str,
        description='–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è',
        name_localizations={'ru':'—Ç–µ–∫—Å—Ç'},
    )  # type: ignore
):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–º–µ—Ç–∫–æ–π '–í–Ω–∏–º–∞–Ω–∏–µ!'"""
    await channel.send(embed=attention_embed(value=value))
    await ctx.respond(
        f'_–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {channel.mention}!_',
        ephemeral=True,
        delete_after=5
    )


@attention.error
async def attention_error(
    ctx: discord.ApplicationContext,
    error: Exception
):
    if isinstance(error, commands.errors.MissingAnyRole):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ "–õ–∏–¥–µ—Ä", "–ö–∞–∑–Ω–∞—á–µ–π" –∏–ª–∏ "–û—Ñ–∏—Ü–µ—Ä"!',
            ephemeral=True,
            delete_after=15
        )
    elif isinstance(error, commands.errors.PrivateMessageOnly):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞!',
            ephemeral=True,
            delete_after=15
        )
    else:
        raise error


@commands.slash_command()
@commands.has_any_role('üåÄ–õ–∏–¥–µ—Ä –≥–∏–ª—å–¥–∏–∏üåÄ', 'üì£–ö–∞–∑–Ω–∞—á–µ–πüì£', 'üõ°Ô∏è–û—Ñ–∏—Ü–µ—Äüõ°Ô∏è')
async def random(
    ctx: discord.ApplicationContext,
    channel: discord.Option(
        discord.TextChannel,
        description='–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É?',
        name_localizations={'ru':'—Ç–µ–∫—Å—Ç–æ–≤—ã–π_–∫–∞–Ω–∞–ª'},
    )  # type: ignore
):
    """
    –ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑—ã–≤–∞—é—â–∞—è —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä. –ü–æ –¥—ç—Ñ–æ–ª—Ç—É –¥–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª 1-100.
    """
    await channel.send(view=ApplicationButton())
    await ctx.respond(
        f'_–ö–Ω–æ–ø–∫–∞ —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª {channel.mention}!_',
        ephemeral=True,
        delete_after=10
    )

@random.error
async def random_error(
    ctx: discord.ApplicationContext,
    error: Exception
):
    if isinstance(error, commands.errors.MissingAnyRole):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ "–õ–∏–¥–µ—Ä", "–ö–∞–∑–Ω–∞—á–µ–π" –∏–ª–∏ "–û—Ñ–∏—Ü–µ—Ä"!',
            ephemeral=True,
            delete_after=15
        )
    elif isinstance(error, commands.errors.PrivateMessageOnly):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞!',
            ephemeral=True,
            delete_after=15
        )
    else:
        raise error


@commands.slash_command()
@commands.has_role('–ê—É–∫—Ü–∏–æ–Ω')
async def greet(
    ctx: discord.ApplicationContext,
    value: discord.Option(
        str,
        description='–í–ø–∏—à–∏ –ª—é–±–æ–µ —Å–ª–æ–≤–æ',
        name_localizations={'ru':'—á—Ç–æ_—É–≥–æ–¥–Ω–æ'},
    )  # type: ignore
):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∞"""
    await ctx.respond(f'–ù—É –ø—Ä–∏–≤–µ—Ç {ctx.user.mention}!\n{value} - —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç?')


@greet.error
async def on_application_command_error(ctx: discord.ApplicationContext, error):
    if isinstance(error, commands.errors.NoPrivateMessage):
        await ctx.respond('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ –õ–°')
    elif isinstance(error, commands.errors.MissingRole):
        await ctx.respond(
            f'{ctx.author.mention} —Ç—ã, –¥—Ä—É–∂–æ—á–µ–∫, '
            f'–Ω–µ –¥–æ—Å—Ç–æ–∏–Ω –ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å!'
        )
    else:
        return error


@commands.slash_command()
@commands.has_any_role('üåÄ–õ–∏–¥–µ—Ä –≥–∏–ª—å–¥–∏–∏üåÄ', 'üì£–ö–∞–∑–Ω–∞—á–µ–πüì£', 'üõ°Ô∏è–û—Ñ–∏—Ü–µ—Äüõ°Ô∏è')
async def clear_all(
    ctx: discord.ApplicationContext,
    channel: discord.Option(
        discord.TextChannel,
        description='–ö–∞–Ω–∞–ª –¥–ª—è –æ—á–∏—Å—Ç–∫–∏',
        name_localizations={'ru':'—Ç–µ–∫—Å—Ç–æ–≤—ã–π_–∫–∞–Ω–∞–ª'},
    ),  # type: ignore
    limit: discord.Option(
        int,
        description='–ö–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è',
        name_localizations={'ru':'—Å–∫–æ–ª—å–∫–æ_—É–¥–∞–ª–∏—Ç—å'},
        default=100,
        required=False
    )  # type: ignore
):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö"""
    await channel.purge(
        limit=limit,
        bulk=True
    )
    await ctx.respond(
        f'_–°–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ {channel.mention}!_',
        ephemeral=True,
        delete_after=10
    )


@clear_all.error
async def clear_all_error(
    ctx: discord.ApplicationContext,
    error: Exception
):
    if isinstance(error, commands.errors.MissingAnyRole):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ "–õ–∏–¥–µ—Ä", "–ö–∞–∑–Ω–∞—á–µ–π" –∏–ª–∏ "–û—Ñ–∏—Ü–µ—Ä"!',
            ephemeral=True,
            delete_after=15
        )
    elif isinstance(error, commands.errors.PrivateMessageOnly):
        await ctx.respond(
            '–ö–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞!',
            ephemeral=True,
            delete_after=15
        )
    else:
        raise error


def setup(bot: discord.Bot):
    bot.add_application_command(technical_works)
    bot.add_application_command(attention)
    bot.add_application_command(greet)
    bot.add_application_command(random)
    bot.add_application_command(clear_all)
