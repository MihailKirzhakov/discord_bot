import discord
import random

from discord.ext import commands
from discord.ui import Modal, InputText, View, button

from answers import answers_for_application
from constants import (
    ANSWER_IF_CHEAT
)
from embeds.embeds import access_embed, denied_embed, application_embed
from functions import character_lookup


class RoleButton(View):

    def __init__(
            self,
            nickname: str,
            user: discord.Interaction.user,
            channel: discord.TextChannel,
            timeout: float | None = None
    ):
        super().__init__(timeout=timeout)
        self.nickname = nickname
        self.user = user
        self.channel = channel

    @button(label='–í—ã–¥–∞—Ç—å —Å—Ç–∞—Ä—à–∏–Ω—É', style=discord.ButtonStyle.green)
    async def callback_accept(self, button: discord.ui.Button, interaction: discord.Interaction):
        if (
            discord.utils.get(interaction.user.roles, name='üì£–ö–∞–∑–Ω–∞—á–µ–πüì£') or
            discord.utils.get(interaction.user.roles, name='üõ°Ô∏è–û—Ñ–∏—Ü–µ—Äüõ°Ô∏è')
        ):
            role_sergeant = discord.utils.get(interaction.guild.roles, id=1222655185055252581)  # –°—Ç–∞—Ä—à–∏–Ω–∞ 1182428098256457819, –í—ã–¥–∞—Ç—å 1222655185055252581
            role_guest = discord.utils.get(interaction.guild.roles, id=1230178082346762240)  # –ì–æ—Å—Ç—å 1173570849467551744, –£–±—Ä–∞—Ç—å 1230178082346762240
            self.disable_all_items()
            await self.user.add_roles(role_sergeant)
            await self.user.remove_roles(role_guest)
            await interaction.response.edit_message(
                view=self
            )
            await self.user.send(embed=access_embed())
            await interaction.respond(
                f'{interaction.user.mention} __–≤—ã–¥–∞–ª__ '
                f'—Ä–æ–ª—å –∏–≥—Ä–æ–∫—É __{self.nickname}__!'
            )
        else:
            random_amount = random.randint(1, 3)
            await interaction.response.send_message(
                f'{answers_for_application[str(random_amount)]}',
                ephemeral=True,
                delete_after=15
            )

    @button(label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –õ–°, —á—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç', style=discord.ButtonStyle.red)
    async def callback_denied(self, button: discord.ui.Button, interaction: discord.Interaction):
        if (
            discord.utils.get(interaction.user.roles, name='üì£–ö–∞–∑–Ω–∞—á–µ–πüì£') or
            discord.utils.get(interaction.user.roles, name='üõ°Ô∏è–û—Ñ–∏—Ü–µ—Äüõ°Ô∏è')
        ):
            self.disable_all_items()
            await interaction.response.send_modal(DeniedRoleModal(
                nickname=self.nickname, view=self, user=self.user
            ))
        else:
            random_amount = random.randint(1, 3)
            await interaction.response.send_message(
                f'{answers_for_application[str(random_amount)]}',
                ephemeral=True,
                delete_after=15
            )


class DeniedRoleModal(Modal):
    def __init__(self, nickname: str, user, view: discord.ui.Button,  *args, **kwargs):
        super().__init__(*args, **kwargs, title='–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ—Ç–∫–∞–∑—É')
        self.nickname = nickname
        self.user = user
        self.view = view

        self.add_item(
                InputText(
                    style=discord.InputTextStyle.multiline,
                    label='–ü–æ—á–µ–º—É —Ä–µ—à–∏–ª –æ—Ç–∫–∞–∑–∞—Ç—å –≤ –∑–∞—è–≤–∫–µ',
                    placeholder='–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ (–µ—Å–ª–∏ –ø—É—Å—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –¥—ç—Ñ–æ–ª—Ç —Ñ—Ä–∞–∑–∞)',
                    max_length=400,
                    required=False
                )
            )

    async def callback(self, interaction: discord.Interaction):
        user = interaction.user
        value = self.children[0].value
        await self.user.send(embed=denied_embed(user=user, reason=value))
        await interaction.response.edit_message(view=self.view)
        await interaction.followup.send(
            f'{interaction.user.mention} __–æ—Ç–∫–∞–∑–∞–ª__ '
            f'–≤ –¥–æ—Å—Ç—É–ø–µ –∏–≥—Ä–æ–∫—É __{self.nickname}__!'
        )


class RoleApplication(Modal):

    def __init__(self, channel: discord.TextChannel, *args, **kwargs):
        super().__init__(*args, **kwargs, title='–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏')
        self.channel = channel

        self.add_item(
            InputText(
                label='–£–∫–∞–∂–∏ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤',
                placeholder='–£—á–∏—Ç—ã–≤–∞–π —Ä–µ–≥–∏—Å—Ç—Ä (–±–æ–ª—å—à–∏–µ –∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –±—É–∫–≤—ã)'
            )
        )

    async def callback(self, interaction: discord.Interaction):
        user = interaction.user
        member = discord.utils.get(interaction.guild.members, id=user.id)
        nickname: str = self.children[0].value
        player_parms = character_lookup(1, nickname)
        if not player_parms:
            await interaction.respond(
                ANSWER_IF_CHEAT,
                ephemeral=True,
                delete_after=30
            )
            return None

        description = f'–ì–∏–ª—å–¥–∏—è: {player_parms['guild']}'

        if 'dragon_emblem' in player_parms:
            description += f'\n–î—Ä–∞–∫–æ–Ω–∏–π –∞–º—É–ª–µ—Ç: {player_parms['dragon_emblem']['name']}'

        await interaction.respond(
            '_–¢–≤–æ–π –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –î–æ–∂–¥–∏—Å—å –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏_',
            ephemeral=True,
            delete_after=15
        )
        await user.edit(nick=nickname)
        await self.channel.send(
            view=RoleButton(nickname=nickname, user=user, channel=self.channel),
            embed=application_embed(
                description, nickname, user, member, player_parms
            )
        )


class ApplicationButton(View):

    def __init__(self, channel: discord.TextChannel, timeout: float | None = None):
        super().__init__(timeout=timeout)
        self.channel = channel

    @button(label='–ó–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É', style=discord.ButtonStyle.green, emoji='üìã')
    async def callback(self, button: discord.ui.Button, interaction: discord.Interaction):
        await interaction.response.send_modal(RoleApplication(channel=self.channel))


@commands.slash_command()
@commands.has_any_role('üì£–ö–∞–∑–Ω–∞—á–µ–πüì£', 'üõ°Ô∏è–û—Ñ–∏—Ü–µ—Äüõ°Ô∏è')
async def role_application(
    ctx: discord.ApplicationContext,
    channel: discord.Option(
        discord.TextChannel,
        description='–í—ã–±–µ—Ä–∏ –∫–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞—è–≤–∫–∏',
        name_localizations={'ru': '–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞'}
    )  # type: ignore
):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –¥–æ—Å—Ç—É–ø"""
    await ctx.respond(
        '_**–ü—Ä–∏–≤–µ—Ç!\n –ó–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞**_',
        view=ApplicationButton(channel=channel)
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
# –æ –∑–∞–ø—Ä–µ—Ç–µ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ä–æ–ª–∏
@role_application.error
async def role_application_error(ctx: discord.ApplicationContext, error: Exception):
    if isinstance(error, commands.errors.MissingAnyRole):
        await ctx.respond('–ö–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ "–ö–∞–∑–Ω–∞—á–µ–π" –∏–ª–∏ "–û—Ñ–∏—Ü–µ—Ä"!', ephemeral=True, delete_after=15)
    elif isinstance(error, commands.errors.PrivateMessageOnly):
        await ctx.respond('–ö–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞!', ephemeral=True, delete_after=15)
    else:
        raise error


def setup(bot: discord.Bot):
    bot.add_application_command(role_application)
